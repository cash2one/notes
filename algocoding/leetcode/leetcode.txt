leetcode--0004 Median of Two Sorted Arrays (c++/python)
There are two sorted arrays A and B of size m and n respectively. Find the median of 
the two sorted arrays. The overall run time complexity should be O(log (m+n)).

leetcode--0005 Longest Palindromic Substring (c++/python)
Given a string S, find the longest palindromic substring in S. You may assume that t-
he maximum length of S is 1000, and there exists one unique longest palindromic subs-
tring.

leetcode--0006 ZigZag Conversion (python)
The string "PAYPALISHIRING" is written in a zigzag pattern on a given number of rows 
like this: (you may want to display this pattern in a fixed font for better legibili-
ty)

P   A   H   N
A P L S I I G
Y   I   R
And then read line by line: "PAHNAPLSIIGYIR"
Write the code that will take a string and make this conversion given a number of ro-
ws:

string convert(string text, int nRows);
convert("PAYPALISHIRING", 3) should return "PAHNAPLSIIGYIR".

leetcode--0007 Reverse Integer ( c++/python)
Reverse digits of an integer.
Example1: x = 123, return 321
Example2: x = -123, return -321
Have you thought about this?
Here are some good questions to ask before coding. Bonus points for you if you have already thought through this!
If the integer's last digit is 0, what should the output be? ie, cases such as 10, 100.
Did you notice that the reversed integer might overflow? Assume the input is a 32-bit integer, then the reverse of 1000000003 overflows. How should you handle such cases?
For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.
Update (2014-11-10):
Test cases had been added to test the overflow behavior.


leetcode--0008 String to Integer (atoi) (c/)
Implement atoi to convert a string to an integer.
Hint: Carefully consider all possible input cases. If you want a challenge, please do 
not see below and ask yourself what are the possible input cases.
Notes: It is intended for this problem to be specified vaguely (ie, no given input s-
pecs). You are responsible to gather all the input requirements up front.

Update (2015-02-10):
The signature of the C++ function had been updated. If you still see your function s-
ignature accepts a const char * argument, please click the reload button  to reset y-
our code definition.

Requirements for atoi:
The function first discards as many whitespace characters as necessary until the fir-
st non-whitespace character is found. Then, starting from this character, takes an o-
ptional initial plus or minus sign followed by as many numerical digits as possible , 
and interprets them as a numerical value.
The string can contain additional characters after those that form the integral numb-
er, which are ignored and have no effect on the behavior of this function.
If the first sequence of non-whitespace characters in str is not a valid integral nu-
mber, or if no such sequence exists because either str is empty or it contains only -
whitespace characters, no conversion is performed.
If no valid conversion could be performed, a zero value is returned. If the correct -
value is out of the range of representable values, INT_MAX (2147483647) or INT_MIN (-2147483648) 
is returned.

leetcode--0127 Word Ladder ( )
Given two words (beginWord and endWord), and a dictionary, find the length of shorte-
st transformation sequence from beginWord to endWord, such that:
Only one letter can be changed at a time
Each intermediate word must exist in the dictionary
For example,
Given:
start = "hit"
end = "cog"
dict = ["hot","dot","dog","lot","log"]
As one shortest transformation is "hit" -> "hot" -> "dot" -> "dog" -> "cog",
return its length 5.
Note:
Return 0 if there is no such transformation sequence.
All words have the same length.
All words contain only lowercase alphabetic characters.

http://www.mamicode.com/info-detail-448603.html

leetcode--0131 Palindrome Partitioning
Given a string s, partition s such that every substring of the partition is a palind-
rome.
Return all possible palindrome partitioning of s.
For example, given s = "aab",
Return
  [
    ["aa","b"],
    ["a","a","b"]
  ]

