
https://kafka.apache.org/documentation.html#quickstart
http://czj4451.iteye.com/blog/2041096   Kafka 安装和测试
http://blog.csdn.net/desilting/article/details/22873335  kafka测试(代码)
http://www.bubuko.com/infodetail-695974.html 【原创】Windows平台搭建Kafka源代码开发环境(Eclipse版本)
http://blog.csdn.net/suifeng3051/article/details/38321043?utm_source=tuicool&utm_medium=referral  Kafka详解二、如何配置Kafka集群
http://www.cnblogs.com/likehua/p/3999538.html  kafka入门：简介、使用场景、设计原理、主要配置及集群搭建（转）


zookeeper.connect=192.168.0.1:2181,192.168.0.2:2182,192.168.0.3:2183
                                                                                     |
一 单节点单broker实例的配置                                                          |
 1 首先启动zookeeper服务                                                             |
   Kafka本身提供了启动zookeeper的脚本（在kafka/bin/目录下）和zookeeper配置文件（在   |
   kafka/config/目录下），首先进入Kafka的主目录（可通过 whereis kafka命令查找到）：
   # bin/zookeeper-server-start.sh config/zookeeper.properties
    
   zookeeper配置文件的一些重要属性:
   +----
   |# Data directory where the zookeeper snapshot is stored.
   |dataDir=/tmp/zookeeper
   |# The port listening for client request
   |clientPort=2181
   
   默认情况下，zookeeper服务器会监听 2181端口，更详细的信息可去zookeeper官网查阅。
   
 2 启动Kafka broker
   运行kafka提供的启动kafka服务脚本即可：
   # bin/kafka-server-start.sh config/server.properties
   broker配置文件中的重要属性：
   +----
   |# broker的id. 每个broker的id必须是唯一的.
   |Broker.id=0
   |# 存放log的目录
   |log.dir=/tmp/kafka8-logs
   |# Zookeeper 连接串
   |zookeeper.connect=localhost:2181
   
 3 创建一个仅有一个Partition的topic 
   # bin/kafka-create-topic.sh --zookeeper localhost:2181 --replica 1 --partition 1 --topic kafkatopic
   
 4 用Kafka提供的生产者客户端启动一个生产者进程来发送消息
   # bin/kafka-console-producer.sh --broker-list localhost:9092 --topic kafkatopic
   其中有两个参数需要注意：
   broker-list:定义了生产者要推送消息的broker地址，以<IP地址:端口>形式     
   topic：生产者发送给哪个topic
   然后你就可以输入一些消息了，如下图： 

 5 启动一个Consumer实例来消费消息
   # bin/kafka-console-consumer.sh --zookeeper localhost:2181 --topic kafkatopic --from-beginning
   当你执行这个命令之后，你便可以看到控制台上打印出的生产者生产的消息：

   和消费者相关的属性配置存放在Consumer.properties文件中，重要的属性有：
   +----
   |# consumer的group id (A string that uniquely identifies a set of consumers
   |# within the same consumer group) 
   |groupid=test-consumer-group
   |# zookeeper 连接串
   |zookeeper.connect=localhost:2181

二 单节点运行多broker实例
 1 启动zookeeper 
   和上面的一样
                                                                                     |
 2 启动Kafka的broker                                                                 |
   要想在一台机器上启动多个broker实例，只需要准备多个server.properties文件即可，比如 |
   我们要在一台机器上启动两个broker：
   首先我们要准备两个server.properties配置文件
   +----
   |server-1
   |brokerid=1
   |port=9092
   |log.dir=/temp/kafka8-logs/broker1    
   |server-2
   |brokerid=2
   |port=9093
   |log.dir=/temp/kafka8-logs/broker2 
   然后我们再用这两个配置文件分别启动一个broker
   # env JMX_PORT=9999 bin/kafka-server-start.sh config/server-1.properties
   # env JMX_PORT=10000 bin/kafka-server-start.sh config/server-2.properties         |
   可以看到我们启动是为每个broker都指定了不同的JMX Port，JMX Port主要用来利用jconsole|
   等工具进行监控和排错
   
 3 创建一个topic
   现在我们要创建一个含有两个Partition分区和2个备份的broker：
   # bin/kafka-create-topic.sh --zookeeper localhost:2181 --replica 2 --partition 2 --topic othertopic
                                                                                     |
 4 启动Producer发送消息                                                              |
   如果我们要用一个Producer发送给多个broker，唯一需要改变的就是在broker-list属性中指 |
   定要连接的broker：
   # bin/kafka-console-producer.sh --broker-list localhost:9092,localhost:9093 --topic othertopic
   如果我们要让不同的Producer发送给不同的broker，我们也仅仅需要为每个Producer配置响应|
   的broker-list属性即可。
   
 5 启动一个消费者来消费消息
   和之前的命令一样
   # bin/kafka-console-consumer.sh --zookeeper localhost:2181 --topic othertopic --from-beginning
   -

三 集群模式（多节点多实例）
   介绍了上面两种配置方法，再理解集群配置就简单了，比如我们要配置如下图所示集群：
   zookeeper配置文件（zookeeper.properties）：不变
   broker的配置配置文件(server.properties)：按照单节点多实例配置方法在一个节点上启动 |
   两个实例，不同的地方是zookeeper的连接串需要把所有节点的zookeeper都连接起来
   # Zookeeper 连接串
   zookeeper.connect=node1:2181,node2:2181




1 首先安装JRE/JDK 

2 下载kafka 
 进入下载页面：http://kafka.apache.org/downloads.html 
 选择Binary downloads下载 （Source download需要编译才能使用） 
 也可以直接在linux终端下载： 
 wget -q http://apache.fayea.com/apache-mirror/kafka/0.8.1/kafka_2.8.0-0.8.1.tgz  

3 解压 
 tar -xzvf kafka_2.8.0-0.8.1.tgz  
 rm kafka_2.8.0-0.8.1.tgz  
 cd kafka_2.8.0-0.8.1  

 /bin 启动和停止命令等。 
 /config 配置文件 
 /libs 类库 
                                                                                     |
4 修改配置                                                                           |
 Kafka默认开启JVM压缩指针，但只是在64位的HotSpot VM受支持，如果安装了32位的HotSpot VM|
 ，需要修改/bin/kafka-run-class.sh文件 
 vi bin/kafka-run-class.sh  
 找到如下行： 
 KAFKA_JVM_PERFORMANCE_OPTS="-server -XX:+UseCompressedOops -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -XX:+CMSScavengeBeforeRemark -XX:+DisableExplicitGC -Djava.awt.headless=true"  
 去除-XX:+UseCompressedOops参数 

5 启动和停止 
 启动Zookeeper server： 
 bin/zookeeper-server-start.sh config/zookeeper.properties &  
 &是为了能退出命令行 

 启动Kafka server: 
 bin/kafka-server-start.sh config/server.properties &  

 停止Kafka server 
 bin/kafka-server-stop.sh  

 停止Zookeeper server: 
 bin/zookeeper-server-stop.sh  

6 单机连通性测试 
 运行producer： 
 bin/kafka-console-producer.sh --broker-list localhost:9092 --topic test  
 早版本的Kafka，--broker-list localhost:9092需改为--zookeeper localhost:2181 

 运行consumer： 
 bin/kafka-console-consumer.sh --zookeeper localhost:2181 --topic test --from-beginning  

 在producer端输入字符串并回车，查看consumer端是否显示。 
                                                                                     |
7 分布式连通性测试 
 Zookeeper Server, Kafka Server, Producer都放在服务器server1上，ip地址为192.168.1.10 |
 Consumer放在服务器server2上，ip地址为192.168.1.12。 

 分别运行server1的producer和server2的consumer， 
 bin/kafka-console-producer.sh --broker-list 192.168.1.10:9092 --topic test  
 bin/kafka-console-consumer.sh --zookeeper 192.168.1.10:2181 --topic test --from-beginning  
 
 在producer的console端输入字符串。
 注意，如果上述命令不能发送接收消息说明没有配置host，可以直接用ip
 
 
 
 