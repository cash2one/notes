GNU C允许零长度数组，在定义变长对象的头结构时，这个特性很有用。
例如：
struct str_data
{
    int a;
    int data[0];
};

若用sizeof(str_data),那大小为4，即系统没有给data分配空间，int data[0]仅仅意味着程序中通过str_data结构体实例中的data[index]来访问a之后的第index个地址。



变长数组（variable-length array)，也简称VLA。
C语言中，直到C99标准出现之前，声明数组时在方括号内只能使用整数常量表达式。而C99做了很大改进，允许数组的[ ]中的值是整形变量或是整形表达式。这就解释了下面的情况：
int n;
scanf ("%d", &n);
int array[n];
虽然n确实是需要运行时动态确定的变量，但是在C99中，以这种变量作为数组大小的形式已经是允许的了。这样的数组就被称之为“变长数组”。
注意：变长数组是指用整型变量或表达式声明或定义的数组，而不是说数组的长度会随时变化，变长数组在其生存期内的长度同样是固定的。
2使用引例
编辑

如下面的例子：
........
fun (10);
.........
void fun(int n)
{
int vla[n];
n += 10;
printf ("vla takes %d bytes/n", sizeof vla);
}
执行的结果是40。虽然n的值在声明了数组vla之后发生了变化，但是vla不会因此而改变大小，因为变长数组一旦被声明，其大小就会保持不变直到生命期结束。