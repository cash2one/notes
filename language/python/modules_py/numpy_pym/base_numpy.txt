----> Indexing

---->----> Single element indexing
Single element indexing for a 1-D array is what one expects. It work exactly like th-
at for other standard Python sequences. It is 0-based, and accepts negative indices -
for indexing from the end of the array.
>>> x = np.arange(10)
>>> x
array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
>>> x[2]
2
>>> x[-2]
8
Unlike lists and tuples, numpy arrays support multidimensional indexing for multidim-
ensional arrays. That means that it is not necessary to separate each dimensionâ€™s in-
dex into its own set of square brackets.
>>> x.shape = (2,5)   # now x is 2-dimensional
>>> x
array([[0, 1, 2, 3, 4],
       [5, 6, 7, 8, 9]])
>>> x[1,3]
8
>>> x[1,-1]
9
Note that if one indexes a multidimensional array with fewer indices than dimensions, 
one gets a subdimensional array. For example:
>>>
>>> x[0]
array([0, 1, 2, 3, 4])







