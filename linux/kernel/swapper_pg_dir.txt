swapper_pg_dir一个全局变量，指向4K大小的一块内存。在代码中的BBS段。




swapper_pg_dir这个东西其实就是一个页目录的指针，页目录指针在x86中是要被加载到cr3寄存器的，每个进程都有一个页目录指针，这个指针指示这个进程的内存映射信息，每当切换到一个进程时，该进程的页目录指针就被加载到了cr3，然后直到切换到别的进程的时候才更改，既然swapper_pg_dir是一个页目录指针，那么这个指针是被哪个进程用的呢？现代操作系统的含义指示了进程间内存隔离，那么一个页目录指针只能被一个进程使用，那么到底是哪个特定的进程使用了swapper_pg_dir指针呢？遗憾的是，答案是没有任何用户进程使用swapper_pg_dir作为页目录指针，swapper_pg_dir只是在内核初始化的时候被载入到cr3指示内存映射信息，之后在init进程启动后就成了idle内核线程的页目录指针了，/sbin/init由一个叫做init的内核线程exec而成，而init内核线程是原始的内核也就是后来的idle线程do_fork而成的，而在do_fork中会为新生的进程重启分配一个页目录指针，由此可见swapper_pg_dir只是在idle和内核线程中被使用，可是它的作用却不只是为idle进程指示内存映射信息，更多的，它作为一个内核空间的内存映射模板而存在，在linux中，任何进程在内核空间就不分彼此了，所有的进程都会公用一份内核空间的内存映射，因此，内核空间是所有进程共享的，每当一个新的进程建立的时候，都会将swapper_pg_dir的768项以后的信息全部复制到新进程页目录的768项以后，代表内核空间。另外在操作3G+896M以上的虚拟内存时，只会更改swapper_pg_dir的映射信息，当别的进程访问到这些页面的时候会发生缺页，在缺页处理中会与swapper_pg_dir同步。