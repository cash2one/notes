|--etc
|  |--issue       release version
|--proc
|  |--version     kernel version



--> 关于ubuntu /usr/lib64 /usr/lib/x86_64-linux-gnu
 http://unix.stackexchange.com/questions/43190/where-did-usr-lib64-go-and-what-is-usr-lib-x86-64-linux-gnu
 https://wiki.debian.org/Multiarch/
 https://wiki.ubuntu.com/MultiarchSpec


http://www.cnblogs.com/peida/archive/2012/11/21/2780075.html  每天一个linux命令（23）：Linux 目录结构

                                                                                     |
对于每一个Linux学习者来说，了解Linux文件系统的目录结构，是学好Linux的至关重要的一步. |
深入了解linux文件目录结构的标准和每个目录的详细功能，对于我们用好linux系统至关重要， |
下面我们就开始了解一下linux目录结构的相关知识。                                      |
当在使用Linux的时候，如果您通过ls –l / 就会发现，在/下包涵很多的目录，比如etc、usr、 |
var、bin ... ... 等目录，而在这些目录中，我们进去看看，发现也有很多的目录或文件。文件|
系统在Linux下看上去就象树形结构，所以我们可以把文件系统的结构形象的称为 树形结构。文 |
件系统的是用来组织和排列文件存取的，所以她是可见的，在Linux中，我们可以通过ls等工具来|
查看其结构，在Linux系统中，我们见到的都是树形结构；比如操作系统安装在一个文件系统中，|
他表现为由/ 起始的树形结构。linux文件系统的最顶端是/，我们称/为Linux的root，也就是   |
Linux操作系统的文件系统。Linux的文件系统的入口就是/，所有的目录、文件、设备都在/之下 |
，/就是Linux文件系统的组织者，也是最上级的领导者。                                   |
由于linux是开放源代码，各大公司和团体根据linux的核心代码做各自的操作，编程。这样就造 |
成在根下的目录的不同。这样就造成个人不能使用他人的linux系统的PC。因为你根本不知道一些|
基本的配置，文件在哪里。。。这就造成了混乱。这就是FHS（Filesystem Hierarchy Standard |
）机构诞生的原因。该机构是linux爱好者自发的组成的一个团体，主要是是对linux做一些基本 |
的要求，不至于是操作者换一台主机就成了linux的‘文盲’。                                |
根据FHS(http://www.pathname.com/fhs/)的官方文件指出， 他们的主要目的是希望让使用者可 |
以了解到已安装软件通常放置于那个目录下， 所以他们希望独立的软件开发商、操作系统制作者|
、以及想要维护系统的用户，都能够遵循FHS的标准。 也就是说，FHS的重点在于规范每个特定的|
目录下应该要放置什么样子的数据而已。 这样做好处非常多，因为Linux操作系统就能够在既有 |
的面貌下(目录架构不变)发展出开发者想要的独特风格。                                   |
事实上，FHS是根据过去的经验一直再持续的改版的，FHS依据文件系统使用的频繁与否与是否允 |
许使用者随意更动， 而将目录定义成为四种交互作用的形态，用表格来说有点像底下这样：    |

                   可分享的(shareable)          不可分享的(unshareable)
不变的(static)     /usr (软件放置处)            /etc (配置文件)
                   /opt (第三方协力软件)        /boot (开机与核心档)
可变动的(variable) /var/mail (使用者邮件信箱)   /var/run (程序相关)
                   /var/spool/news (新闻组)     /var/lock (程序相关)
                                                                                     |
四中类型:                                                                            |
1. 可分享的：                                                                        |
可以分享给其他系统挂载使用的目录，所以包括执行文件与用户的邮件等数据，是能够分享给网 |
络上其他主机挂载用的目录；                                                           |
2. 不可分享的：                                                                      |
自己机器上面运作的装置文件或者是与程序有关的socket文件等，由于仅与自身机器有关，所以 |
当然就不适合分享给其他主机了。                                                       |
3. 不变的：                                                                          |
有些数据是不会经常变动的，跟随着distribution而不变动。例如函式库、文件说明文件、系统 |
管理员所管理的主机服务配置文件等等；                                                 |
4. 可变动的：                                                                        |
经常改变的数据，例如登录文件、一般用户可自行收受的新闻组等。                         |

事实上，FHS针对目录树架构仅定义出三层目录底下应该放置什么数据而已，分别是底下这三个目|
录的定义：
/    ：(root, 根目录)与开机系统有关；
/usr ：(unix software resource)与软件安装/执行有关；
/var ：(variable)与系统运作过程有关。
                                                                                     |
一. 根目录 (/) 的意义与内容：                                                        |
根目录是整个系统最重要的一个目录，因为不但所有的目录都是由根目录衍生出来的，同时根目 |
录也与开机/还原/系统修复等动作有关。由于系统开机时需要特定的开机软件、核心文件、开机 |
所需程序、函式库等等文件数据，若系统出现错误时，根目录也必须要包含有能够修复文件系统 |
的程序才行。因为根目录是这么的重要，所以在FHS的要求方面，他希望根目录不要放在非常大的|
分区，因为越大的分区内你会放入越多的数据，如此一来根目录所在分区就可能会有较多发生错 |
误的机会。因此FHS标准建议：根目录(/)所在分区应该越小越好，且应用程序所安装的软件最好 |
不要与根目录放在同一个分区内，保持根目录越小越好。如此不但效能较佳，根目录所在的文件 |
系统也较不容易发生问题。说白了，就是根目录和Windows的C盘一个样。根据以上原因，FHS认为|
根目录(/)下应该包含如下子目录：                                                      |
/bin                                                                                 |
系统有很多放置执行档的目录，但/bin比较特殊。因为/bin放置的是在单人维护模式下还能够被 |
操作的指令。在/bin底下的指令可以被root与一般帐号所使用，主要有：cat, chmod, chown,   |
date, mv, mkdir, cp, bash等等常用的指令。                                            |
/boot                                                                                |
主要放置开机会使用到的档案，包括Linux核心档案以及开机选单与开机所需设定档等等。Linux |
kernel常用的档名为：vmlinuz ，如果使用的是grub这个开机管理程式，则还会存在/boot/grub/|
这个目录。                                                                           |
/dev                                                                                 |
在Linux系统上，任何装置与周边设备都是以档案的型态存在于这个目录当中。只要通过存取这个|
目录下的某个档案，就等于存取某个装置。比要重要的档案有/dev/null, /dev/zero, /dev/tty |
, /dev/lp*, / dev/hd*, /dev/sd*等等                                                  |
/etc                                                                                 |
系统主要的设定档几乎都放置在这个目录内，例如人员的帐号密码档、各种服务的启始档等等。 |
一般来说，这个目录下的各档案属性是可以让一般使用者查阅的，但是只有root有权力修改。FHS|
建议不要放置可执行档(binary)在这个目录中。比较重要的档案有：/etc/inittab,/etc/init.d/|
, /etc/modprobe.conf, /etc/X11/, /etc/fstab, /etc/sysconfig/等等。另外，其下重要的目 |
录有：/etc/init.d/ ：所有服务的预设启动script都是放在这里的，例如要启动或者关闭      |
iptables的话：/etc/init.d/iptables start、/etc/init.d/iptables stop                  |
/etc/xinetd.d/ ：这就是所谓的super daemon管理的各项服务的设定档目录。                |
/etc/X11/ ：与X Window有关的各种设定档都在这里，尤其是xorg.conf或XF86Config这两个    |
X Server的设定档。                                                                   |
/home                                                                                |
这是系统预设的使用者家目录(home directory)。在你新增一个一般使用者帐号时，预设的使用 |
者家目录都会规范到这里来。比较重要的是，家目录有两种代号： ~ ：代表当前使用者的家目录|
，而 ~guest：则代表用户名为guest的家目录。                                           |
/lib                                                                                 |
系统的函式库非常的多，而/lib放置的则是在开机时会用到的函式库，以及在/bin或/sbin底下的|
指令会呼叫的函式库而已 。什么是函式库呢？妳可以将他想成是外挂，某些指令必须要有这些外|
挂才能够顺利完成程式的执行之意。尤其重要的是/lib/modules/这个目录，因为该目录会放置核|
心相关的模组(驱动程式)。                                                             |
/media                                                                               |
media是媒体的英文，顾名思义，这个/media底下放置的就是可移除的装置。包括软碟、光碟、  |
DVD等等装置都暂时挂载于此。常见的档名有：/media/floppy, /media/cdrom等等。           |
/mnt                                                                                 |
如果妳想要暂时挂载某些额外的装置，一般建议妳可以放置到这个目录中。在古早时候，这个目 |
录的用途与/media相同啦。只是有了/media之后，这个目录就用来暂时挂载用了。             |
/opt                                                                                 |
这个是给第三方协力软体放置的目录。什么是第三方协力软体啊？举例来说，KDE这个桌面管理系|
统是一个独立的计画，不过他可以安装到Linux系统中，因此KDE的软体就建议放置到此目录下了 |
。 另外，如果妳想要自行安装额外的软体(非原本的distribution提供的)，那么也能够将你的软|
体安装到这里来。不过，以前的Linux系统中，我们还是习惯放置在/usr/local目录下。        |
/root                                                                                |
系统管理员(root)的家目录。之所以放在这里，是因为如果进入单人维护模式而仅挂载根目录时 |
，该目录就能够拥有root的家目录，所以我们会希望root的家目录与根目录放置在同一个分区中。
/sbin                                                                                |
Linux有非常多指令是用来设定系统环境的，这些指令只有root才能够利用来设定系统，其他使用|
者最多只能用来查询而已。放在/sbin底下的为开机过程中所需要的，里面包括了开机、修复、还|
原系统所需要的指令。至于某些伺服器软体程式，一般则放置到/usr/sbin/当中。至于本机自行 |
安装的软体所产生的系统执行档(system binary)，则放置到/usr/local/sbin/当中了。常见的指|
令包括：fdisk, fsck, ifconfig, init, mkfs等等。                                      |
/srv                                                                                 |
srv可以视为service的缩写，是一些网路服务启动之后，这些服务所需要取用的资料目录。常见 |
的服务例如WWW, FTP等等。举例来说，WWW伺服器需要的网页资料就可以放置在/srv/www/里面。 |
呵呵，看来平时我们编写的代码应该放到这里了。                                         |
/tmp                                                                                 |
这是让一般使用者或者是正在执行的程序暂时放置档案的地方。这个目录是任何人都能够存取的 |
，所以你需要定期的清理一下。当然，重要资料不可放置在此目录啊。因为FHS甚至建议在开机时|
，应该要将/tmp下的资料都删除。                                                       |

事实上FHS针对根目录所定义的标准就仅限于上表，不过仍旧有些目录也需要我们了解一下，具体|
如下：                                                                               |
/lost+found                                                                          |
这个目录是使用标准的ext2/ext3档案系统格式才会产生的一个目录，目的在于当档案系统发生错|
误时，将一些遗失的片段放置到这个目录下。这个目录通常会在分割槽的最顶层存在，例如你加 |
装一个硬盘于/disk中，那在这个系统下就会自动产生一个这样的目录/disk/lost+found        |
/proc                                                                                |
这个目录本身是一个虚拟文件系统(virtual filesystem)喔。他放置的资料都是在内存当中，例 |
如系统核心、行程资讯(process)（是进程吗?）、周边装置的状态及网络状态等等。因为这个目 |
录下的资料都是在记忆体（内存）当中，所以本身不占任何硬盘空间。比较重要的档案（目录） |
例如：/proc/cpuinfo, /proc/dma, /proc/interrupts, /proc/ioports, /proc/net/*等等。呵 |
呵，是虚拟内存吗[guest]？                                                            |
/sys                                                                                 |
这个目录其实跟/proc非常类似，也是一个虚拟的档案系统，主要也是记录与核心相关的资讯。包|
括目前已载入的核心模组与核心侦测到的硬体装置资讯等等。这个目录同样不占硬盘容量。     |

除了这些目录的内容之外，另外要注意的是，因为根目录与开机有关，开机过程中仅有根目录会 |
被挂载，其他分区则是在开机完成之后才会持续的进行挂载的行为。就是因为如此，因此根目录 |
下与开机过程有关的目录，就不能够与根目录放到不同的分区去。那哪些目录不可与根目录分开 |
呢？有底下这些：                                                                     |
/etc：配置文件
/bin：重要执行档
/dev：所需要的装置文件
/lib：执行档所需的函式库与核心所需的模块
/sbin：重要的系统执行文件
这五个目录千万不可与根目录分开在不同的分区。请背下来啊。
                                                                                     | 
二. /usr 的意义与内容：                                                              |
依据FHS的基本定义，/usr里面放置的数据属于可分享的与不可变动的(shareable, static)，如 |
果你知道如何透过网络进行分区的挂载(例如在服务器篇会谈到的NFS服务器)，那么/usr确实可以|
分享给局域网络内的其他主机来使用喔。/usr不是user的缩写，其实usr是Unix Software Resource
的缩写，也就是Unix操作系统软件资源所放置的目录，而不是用户的数据啦。这点要注意。FHS建|
议所有软件开发者，应该将他们的数据合理的分别放置到这个目录下的次目录，而不要自行建立 |
该软件自己独立的目录。因为是所有系统默认的软件(distribution发布者提供的软件)都会放置 |
到/usr底下，因此这个目录有点类似Windows 系统的C:\Windows\ + C:\Program files\这两个目|
录的综合体，系统刚安装完毕时，这个目录会占用最多的硬盘容量。一般来说，/usr的次目录建 |
议有底下这些：                                                                       |
/usr/X11R6/                                                                          |
为X Window System重要数据所放置的目录，之所以取名为X11R6是因为最后的X版本为第11版，且|
该版的第6次释出之意。                                                                |
/usr/bin/                                                                            | 
绝大部分的用户可使用指令都放在这里。请注意到他与/bin的不同之处。(是否与开机过程有关) |
/usr/include/                                                                        |
c/c++等程序语言的档头(header)与包含档(include)放置处，当我们以tarball方式 (*.tar.gz  |
的方式安装软件)安装某些数据时，会使用到里头的许多包含档。                            |
/usr/lib/                                                                            |
包含各应用软件的函式库、目标文件(object file)，以及不被一般使用者惯用的执行档或脚本。|
某些软件会提供一些特殊的指令来进行服务器的设定，这些指令也不会经常被系统管理员操作， |
那就会被摆放到这个目录下啦。要注意的是，如果你使用的是X86_64的Linux系统，那可能会有  |
/usr/lib64/目录产生                                                                  |
/usr/local/                                                                          |
统管理员在本机自行安装自己下载的软件(非distribution默认提供者)，建议安装到此目录，这 |
样会比较便于管理。举例来说，你的distribution提供的软件较旧，你想安装较新的软件但又不 |
想移除旧版，此时你可以将新版软件安装于/usr/local/目录下，可与原先的旧版软件有分别啦。|
你可以自行到/usr/local去看看，该目录下也是具有bin, etc, include, lib...的次目录      |
/usr/sbin/                                                                           |
非系统正常运作所需要的系统指令。最常见的就是某些网络服务器软件的服务指令(daemon)     |
/usr/share/                                                                          |
放置共享文件的地方，在这个目录下放置的数据几乎是不分硬件架构均可读取的数据，因为几乎 |
都是文本文件嘛。在此目录下常见的还有这些次目录：
/usr/share/man：联机帮助文件
/usr/share/doc：软件杂项的文件说明
/usr/share/zoneinfo：与时区有关的时区文件
/usr/src/                                                                            |
一般原始码建议放置到这里，src有source的意思。至于核心原始码则建议放置到/usr/src/linux/
目录下。                                                                             |
                                                                                     |
三. /var 的意义与内容：                                                              |
如果/usr是安装时会占用较大硬盘容量的目录，那么/var就是在系统运作后才会渐渐占用硬盘容 |
量的目录。因为/var目录主要针对常态性变动的文件，包括缓存(cache)、登录档(log file)以及|
某些软件运作所产生的文件，包括程序文件(lock file, run file)，或者例如MySQL数据库的文 |
件等等。常见的次目录有：
/var/cache/
应用程序本身运作过程中会产生的一些暂存档
/var/lib/                                                                            |
程序本身执行的过程中，需要使用到的数据文件放置的目录。在此目录下各自的软件应该要有各 |
自的目录。举例来说，MySQL的数据库放置到/var/lib/mysql/而rpm的数据库则放到/var/lib/rpm|
去
/var/lock/                                                                           |
某些装置或者是文件资源一次只能被一个应用程序所使用，如果同时有两个程序使用该装置时， |
就可能产生一些错误的状况，因此就得要将该装置上锁(lock)，以确保该装置只会给单一软件所 |
使用。 举例来说，刻录机正在刻录一块光盘，你想一下，会不会有两个人同时在使用一个刻录机|
烧片？ 如果两个人同时刻录，那片子写入的是谁的数据？所以当第一个人在刻录时该刻录机就会|
被上锁， 第二个人就得要该装置被解除锁定(就是前一个人用完了)才能够继续使用            |
/var/log/                                                                            |
非常重要。这是登录文件放置的目录。里面比较重要的文件如/var/log/messages,             |
/var/log/wtmp(记录登入者的信息)等。                                                  |
/var/mail/                                                                           |
放置个人电子邮件信箱的目录，不过这个目录也被放置到/var/spool/mail/目录中，通常这两个 |
目录是互为链接文件。                                                                 |
/var/run/                                                                            |
某些程序或者是服务启动后，会将他们的PID放置在这个目录下                              |
/var/spool/                                                                          |
这个目录通常放置一些队列数据，所谓的“队列”就是排队等待其他程序使用的数据。这些数据被 |
使用后通常都会被删除。举例来说，系统收到新信会放置到/var/spool/mail/中，但使用者收下 |
该信件后该封信原则上就会被删除。信件如果暂时寄不出去会被放到/var/spool/mqueue/中，等 |
到被送出后就被删除。如果是工作排程数据(crontab)，就会被放置到/var/spool/cron/目录中。|
由于FHS仅是定义出最上层(/)及次层(/usr, /var)的目录内容应该要放置的文件或目录数据，因 |
此，在其他次目录层级内，就可以随开发者自行来配置了。                                 |
                                                                                     |
四. 目录树(directory tree) :                                                         |
在Linux底下，所有的文件与目录都是由根目录开始的。那是所有目录与文件的源头, 然后再一个|
一个的分支下来，因此，我们也称这种目录配置方式为：目录树(directory tree), 这个目录树 |
的主要特性有：目录树的启始点为根目录 (/, root)；每一个目录不止能使用本地端的partition|
的文件系统，也可以使用网络上的 filesystem 。举例来说，可以利用 Network File System   |
(NFS) 服务器挂载某特定目录等。每一个文件在此目录树中的文件名(包含完整路径)都是独一无 |
二的。如果我们将整个目录树以图的方法来显示，并且将较为重要的文件数据列出来的话，那么 |
目录树架构就如下图所示：                                                             |
	                                                                                 |
五. 绝对路径与相对路径                                                               |
除了需要特别注意的FHS目录配置外，在文件名部分我们也要特别注意。因为根据档名写法的不同|
，也可将所谓的路径(path)定义为绝对路径(absolute)与相对路径(relative)。这两种文件名/路|
径的写法依据是这样的：绝对路径：由根目录(/)开始写起的文件名或目录名称，例如          |
/home/dmtsai/.bashrc；相对路径：相对于目前路径的文件名写法。例如 ./home/dmtsai 或    |
http://www.cnblogs.com/home/dmtsai/ 等等。反正开头不是 / 就属于相对路径的写法。而你必|
须要了解，相对路径是以你当前所在路径的相对位置来表示的。举例来说，你目前在 /home 这个|
目录下，如果想要进入 /var/log 这个目录时，可以怎么写呢？                             |
cd /var/log   (absolute)
cd ../var/log (relative)                                                             |
因为你在 /home 底下，所以要回到上一层 (../) 之后，才能继续往 /var 来移动的，特别注意 |
这两个特殊的目录：                                                                   |
.  ：代表当前的目录，也可以使用 ./ 来表示；                                          |
.. ：代表上一层目录，也可以 ../ 来代表。                                             |
这个 . 与 .. 目录概念是很重要的，你常常会看到 cd .. 或 ./command 之类的指令下达方式，|
就是代表上一层与目前所在目录的工作状态。

实例1：如何先进入/var/spool/mail/目录，再进入到/var/spool/cron/目录内？
命令：
cd /var/spool/mail
cd ../cron
说明：
由于/var/spool/mail与/var/spool/cron是同样在/var/spool/目录中。如此就不需要在由根目录开始写起了。这个相对路径是非常有帮助的，尤其对于某些软件开发商来说。 一般来说，软件开发商会将数据放置到/usr/local/里面的各相对目录。 但如果用户想要安装到不同目录呢？就得要使用相对路径。
实例2：网络文件常常提到类似./run.sh之类的数据，这个指令的意义为何？
说明：
由于指令的执行需要变量的支持，若你的执行文件放置在本目录，并且本目录并非正规的执行文件目录(/bin, /usr/bin等为正规)，此时要执行指令就得要严格指定该执行档。./代表本目录的意思，所以./run.sh代表执行本目录下， 名为run.sh的文件。
      参考资料：《鸟哥的linux私房菜》 



http://www.comptechdoc.org/os/linux/usersguide/linux_ugfilestruct.html
.....................................................................................
Parts of a Unix directory tree. See the FSSTND standard (Filesystem standard)

/			Root
|---root		The home directory for the root user
|---home		Contains the user's home directories
|    |----ftp		Users include many services as listed here
|    |----httpd
|    |----samba
|    |----user1
|    |----user2
|---bin			Commands needed during bootup that might be needed by normal users
|---sbin		Like bin but commands are not intended for normal users.  Commands run by LINUX.
|---proc		This filesystem is not on a disk.  Exists in the kernels imagination (virtual).  This directory
|    |			Holds information about kernel parameters and system configuration.
|    |----1		A directory with info about process number 1.  Each process
|				has a directory below proc.  
|---usr			Contains all commands, libraries, man pages, games and static files for normal
|    |			operation. Unix System Resource
|    |----bin		Almost all user commands.  some commands are in /bin or /usr/local/bin.
|    |----sbin		System admin commands not needed on the root filesystem.  e.g., most server 
|    |			programs.
|    |----include	Header files for the C programming language.  Should be below /user/lib for
|    |			consistency.
|    |----lib		Unchanging data files for programs and subsystems
|    |----local		The place for locally installed software and other files.
|    |----man		Manual pages
|    |----info		Info documents
|    |----doc		Documentation for various packages
|    |----tmp
|    |----X11R6		The X windows system files.  There is a directory similar to usr below this 
|    |			directory.
|    |----X386		Like X11R6 but for X11 release 5
|---boot		Files used by the bootstrap loader, LILO.  Kernel images are often kept here.
|---lib			Shared libraries needed by the programs on the root filesystem
|    |----modules 	Loadable kernel modules, especially those needed to boot the system after
|			 disasters.
|---dev			Device files for devices such as disk drives, serial ports, etc.
|---etc			Configuration files specific to the machine.
|    |----skel		When a home directory is created it is initialized with files from this directory
|    |----sysconfig 	Files that configure the linux system for networking, keyboard, time, and more.
|---var			Contains files that change for mail, news, printers log files, man pages, temp files
|    |----file
|    |----lib		Files that change while the system is running normally
|    |----local		Variable data for programs installed in /usr/local.
|    |----lock		Lock files.  Used by a program to indicate it is using a particular device or file
|    |----log		Log files from programs such as login and syslog which logs all logins,
|    |			logouts, and other system messages.
|    |----run		Files that contain information about the system that is valid until the system is
|    |			next booted
|    |----spool		Directories for mail, printer spools, news and other spooled work.
|    |----tmp		Temporary files that are large or need to exist for longer than they should in
|    |			/tmp.
|    |----catman	A cache for man pages that are formatted on demand
|---mnt			Mount points for temporary mounts by the system administrator.
|---tmp			Temporary files.  Programs running after bootup should use /var/tmp.



http://www.cnblogs.com/Bob-FD/archive/2012/07/12/2588233.html
/：根目录，一般根目录下只存放目录，不要存放文件，/etc、/bin、/dev、/lib、/sbin应该和根目录放置在一个分区中

/bin:/usr/bin:可执行二进制文件的目录，如常用的命令ls、tar、mv、cat等。

/boot：放置linux系统启动时用到的一些文件。/boot/vmlinuz为linux的内核文件，以及/boot/gurb。建议单独分区，分区大小100M即可

/dev：存放linux系统下的设备文件，访问该目录下某个文件，相当于访问某个设备，常用的是挂载光驱mount /dev/cdrom /mnt。

/etc：系统配置文件存放的目录，不建议在此目录下存放可执行文件，重要的配置文件有/etc/inittab、/etc/fstab、/etc/init.d、/etc/X11、/etc/sysconfig、/etc/xinetd.d修改配置文件之前记得备份。

注：/etc/X11存放与x windows有关的设置。

/home：系统默认的用户家目录，新增用户账号时，用户的家目录都存放在此目录下，~表示当前用户的家目录，~test表示用户test的家目录。建议单独分区，并设置较大的磁盘空间，方便用户存放数据

/lib:/usr/lib:/usr/local/lib：系统使用的函数库的目录，程序在执行过程中，需要调用一些额外的参数时需要函数库的协助，比较重要的目录为/lib/modules。

/lost+fount：系统异常产生错误时，会将一些遗失的片段放置于此目录下，通常这个目录会自动出现在装置目录下。如加载硬盘于/disk 中，此目录下就会自动产生目录/disk/lost+found

/mnt:/media：光盘默认挂载点，通常光盘挂载于/mnt/cdrom下，也不一定，可以选择任意位置进行挂载。

/opt：给主机额外安装软件所摆放的目录。如：FC4使用的Fedora 社群开发软件，如果想要自行安装新的KDE 桌面软件，可以将该软件安装在该目录下。以前的 Linux 系统中，习惯放置在 /usr/local 目录下

/proc：此目录的数据都在内存中，如系统核心，外部设备，网络状态，由于数据都存放于内存中，所以不占用磁盘空间，比较重要的目录有/proc/cpuinfo、/proc/interrupts、/proc/dma、/proc/ioports、/proc/net/*等

/root：系统管理员root的家目录，系统第一个启动的分区为/，所以最好将/root和/放置在一个分区下。

/sbin:/usr/sbin:/usr/local/sbin：放置系统管理员使用的可执行命令，如fdisk、shutdown、mount等。与/bin不同的是，这几个目录是给系统管理员root使用的命令，一般用户只能"查看"而不能设置和使用。

/tmp：一般用户或正在执行的程序临时存放文件的目录,任何人都可以访问,重要数据不可放置在此目录下

/srv：服务启动之后需要访问的数据目录，如www服务需要访问的网页数据存放在/srv/www内

/usr：应用程序存放目录，/usr/bin存放应用程序，/usr/share存放共享数据，/usr/lib存放不能直接运行的，却是许多程序运行所必需的一些函数库文件。/usr/local:存放软件升级包。/usr/share/doc:系统说明文件存放目录。/usr/share/man: 程序说明文件存放目录，使用 man ls时会查询/usr/share/man/man1/ls.1.gz的内容建议单独分区，设置较大的磁盘空间

/var：放置系统执行过程中经常变化的文件，如随时更改的日志文件/var/log，/var/log/message：所有的登录文件存放目录，/var/spool/mail：邮件存放的目录，/var/run:程序或服务启动后，其PID存放在该目录下。建议单独分区，设置较大的磁盘空间

http://linux-wiki.cn/wiki/zh-hans/Linux%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84
根文件系统
/bin
这一目录中存放了供所有用户使用的完成基本维护任务的命令。其中bin是binary的缩写，表示二进制文件，通常为可执行文件。一些常用的系统命令，如cp、ls等保存在该目录中。
/boot
这里存放的是启动Linux时使用的一些核心文件。如操作系统内核、引导程序Grub等。
/dev
在此目录中包含所有的系统设备文件。从此目录可以访问各种系统设备。如CD-ROM，磁盘驱动器，调制解调器和内存等。在该目录中还包含有各种实用功能，如用于创建设备文件的MAKEDEV。
/etc
该目录中包含系统和应用软件的配置文件。
/etc/passwd
该目录中包含了系统中的用户描述信息，每行记录一个用户的信息。
/home
存储普通用户的个人文件。每个用户的主目录均在/home下以自己的用户名命名。
/lib
这个目录里存放着系统最基本的共享链接库和内核模块。共享链接库在功能上类似于Windows里的.dll文件。
/lib64
64位系统有这个文件夹，64位程序的库。
/lost+found
这并不是Linux目录结构的组成部分，而是ext3文件系统用于保存丢失文件的地方。不恰当的关机操作和磁盘错误均会导致文件丢失，这意味着这些被标注为“在使用”，但却并未列于磁盘上的数据结构上。正常情况下，引导进程会运行fsck程序，该程序能发现这些文件。除了“/”分区上的这个目录外，在每个分区上均有一个lost+found目录。
/media
可移动设备的挂载点，当前的操作系统通常会把U盘等设备自动挂载到该文件夹下。
/mnt
临时用于挂载文件系统的地方。一般情况下这个目录是空的，而在我们将要挂载分区时在这个目录下建立目录，再将我们将要访问的设备挂载在这个目录上，这样我们就可访问文件了。（注意在GNOME中，只有挂载到/media的文件夹才会显示在“计算机”中，挂载到/mnt不会做为特殊设备显示，详见自动挂载分区）
/opt
多数第三方软件默认安装到此位置，如Adobe Reader、google-earth等。并不是每个系统都会创建这个目录。
/proc
它是存在于内存中的虚拟文件系统。里面保存了内核和进程的状态信息。多为文本文件，可以直接查看。如/proc/cpuinfo保存了有关CPU的信息。
/root
这是根用户的主目录。与保留给个人用户的/home下的目录很相似，该目录中还包含仅与根用户有关的条目。
/sbin
供超级用户使用的可执行文件，里面多是系统管理命令，如fsck, reboot, shutdown, ifconfig等。
/tmp
该目录用以保存临时文件。该目录具有Sticky特殊权限，所有用户都可以在这个目录中创建、编辑文件。但只有文件拥有者才能删除文件。为了加快临时文件的访问速度，有的实现把/tmp放在内存中。
/usr
静态的用户级应用程序等，见下。
/var
动态的程序数据等，见下文。
/usr目录结构
/usr通常是一个庞大的文件夹，其下的目录结构与根目录相似，但根目录中的文件多是系统级的文件，而/usr中是用户级的文件，一般与具体的系统无关。

Hint.gif提示： 
usr最早是user的缩写，/usr的作用与现在的/home相同。而目前其通常被认为是 User System Resources 的缩写，其中通常是用户级的软件等，与存放系统级文件的根目录形成对比。[2]
应注意，程序的配置文件、动态的数据文件等都不会存放到/usr，所以除了安装、卸载软件外，一般无需修改/usr中的内容。说在系统正常运行时，/usr甚至可以被只读挂载。由于这一特性，/usr常被划分在单独的分区，甚至有时多台计算机可以共享一个/usr。

/usr/bin
多数日常应用程序存放的位置。如果/usr被放在单独的分区中，Linux的单用户模式不能访问/usr/bin，所以对系统至关重要的程序不应放在此文件夹中。
/usr/include
存放C/C++头文件的目录
/usr/lib
系统的库文件
/usr/local
新装的系统中这个文件夹是空的，可以用于存放个人安装的软件。安装了本地软件的/usr/local里的目录结构与/usr相似
/usr/sbin
在单用户模式中不用的系统管理程序，如apache2等。
/usr/share
与架构无关的数据。多数软件安装在此。
/usr/X11R6
该目录用于保存运行X-Window所需的所有文件。该目录中还包含用于运行GUI要的配置文件和二进制文件。
/usr/src
源代码
/var目录结构
/var中包括了一些数据文件，如系统日志等。/var的存放使得/usr被只读挂载成为可能。

/var/cache
应用程序的缓存文件
/var/lib
应用程序的信息、数据。如数据库的数据等都存放在此文件夹。
/var/local
/usr/local中程序的信息、数据
/var/lock
锁文件
/var/log
日志文件
/var/opt
/opt中程序的信息、数据
/var/run
正在执行着的程序的信息，如PID文件应存放于此
/var/spool
存放程序的假脱机数据（即spool data）
/var/tmp
临时文件
