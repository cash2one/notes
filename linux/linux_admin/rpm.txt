
--> install
 http://vbird.dic.ksu.edu.tw/linux_basic/0520rpm_and_srpm_2.php#rpmmanager  RPM 软件管理程序： rpm
                                                                                     |
 一般来说，RPM 类型的文件在安装的时候，会先去读取文件内记载的配置参数内容，然后将该数|
 据用来比对 Linux 系统的环境，以找出是否有属性相依的软件尚未安装的问题。例如 Openssh 
 这个连线软件需要透过 Openssl 这个加密软件的帮忙，所以得先安装 openssl 才能装 openssh 
 的意思。那你的环境如果没有 openssl ， 你就无法安装 openssh 的意思啦。

 若环境检查合格了，那么 RPM 文件就开始被安装到你的 Linux 系统上。安装完毕后，该软件相
 关的资讯就会被写入 /var/lib/rpm/ 目录下的数据库文件中了。 上面这个目录内的数据很重要
 喔！因为未来如果我们有任何软件升级的需求，版本之间的比较就是来自於这个数据库， 而如果
 你想要查询系统已经安装的软件，也是从这里查询的！同时，目前的 RPM 也提供数码签章资讯，
 这些数码签章也是在这个目录内记录的呢！所以说，这个目录得要注意不要被删除了啊！

 因为安装软件是 root 的工作，因此你得要是 root 的身份才能够操作 rpm 这命令的。 用 rpm 
 来安装很简单啦！假设我要安装一个档名为 rp-pppoe-3.5-32.1.i386.rpm 的文件，那么我可以
 这样：

 [root@www ~]# rpm -i rp-pppoe-3.5-32.1.i386.rpm
 不过，这样的参数其实无法显示安装的进度，所以，通常我们会这样下达安装命令：

 [root@www ~]# rpm -ivh package_name
 选项与参数：
 -i ：install 的意思
 -v ：察看更细部的安装资讯画面
 -h ：以安装资讯列显示安装进度

 范例一：安装 rp-pppoe-3.5-32.1.i386.rpm
 [root@www ~]# rpm -ivh rp-pppoe-3.5-32.1.i386.rpm
 Preparing...     ####################################### [100%]
    1:rp-pppoe    ####################################### [100%] 

 范例二、一口气安装两个以上的软件时：
 [root@www ~]# rpm -ivh a.i386.rpm b.i386.rpm *.rpm
 # 后面直接接上许多的软件文件！

 范例三、直接由网络上面的某个文件安装，以网址来安装：
 [root@www ~]# rpm -ivh http://website.name/path/pkgname.rpm
                                                                                     |
 另外，如果我们在安装的过程当中发现问题，或者已经知道会发生的问题， 而还是『执意』要 
 安装这个软件时，可以使用如下的参数『强制』安装上去：

 rpm 安装时常用的选项与参数说明
 可下达的选项   代表意义
 --nodeps       使用时机：当发生软件属性相依问题而无法安装，但你执意安装时
                危险性： 软件会有相依性的原因是因为彼此会使用到对方的机制或功能，如果强制安装而不考虑软件的属性相依， 则可能会造成该软件的无法正常使用！
 --replacefiles	使用时机： 如果在安装的过程当中出现了『某个文件已经被安装在你的系统上面』的资讯，又或许出现版本不合的信息 (confilcting files) 时，可以使用这个参数来直接覆盖文件。
                危险性： 覆盖的动作是无法复原的！所以，你必须要很清楚的知道被覆盖的文件是真的可以被覆盖喔！否则会欲哭无泪！
 --replacepkgs	使用时机： 重新安装某个已经安装过的软件！如果你要安装一堆 RPM 软件文件时，可以使用 rpm -ivh *.rpm ，但若某些软件已经安装过了， 此时系统会出现『某软件已安装』的资讯，导致无法继续安装。此时可使用这个选项来重复安装喔！
 --force	    使用时机：这个参数其实就是 --replacefiles 与 --replacepkgs 的综合体！
 --test	        使用时机： 想要测试一下该软件是否可以被安装到使用者的 Linux 环境当中，可找出是否有属性相依的问题。范例为：
                rpm -ivh pkgname.i386.rpm --test
 --justdb	    使用时机： 由於 RPM 数据库破损或者是某些缘故产生错误时，可使用这个选项来升级软件在数据库内的相关资讯。
 --nosignature	使用时机： 想要略过数码签章的检查时，可以使用这个选项。
 --prefix       新路径	使用时机： 要将软件安装到其他非正规目录时。举例来说，你想要将某软件安装到 /usr/local 而非正规的 /bin, /etc 等目录， 就可以使用『 --prefix /usr/local 』来处理了。
 --noscripts    使用时机：不想让该软件在安装过程中自行运行某些系统命令。
                说明： RPM 的优点除了可以将文件放置到定位之外，还可以自动运行一些前置作业的命令，例如数据库的初始化。 如果你不想要让 RPM 帮你自动运行这一类型的命令，就加上他吧！

--> upgrade/freshen                                                                  |
 使用 RPM 来升级真是太简单了！就以 -Uvh 或 -Fvh 来升级即可，而 -Uvh 与 -Fvh 可以用的
 选项与参数，跟 install 是一样的。不过， -U 与 -F 的意义还是不太一样的，基本的差别是这
 样的：

 -Uvh	后面接的软件即使没有安装过，则系统将予以直接安装； 若后面接的软件有安装过旧版，则系统自动升级至新版；
 -Fvh	如果后面接的软件并未安装到你的 Linux 系统上，则该软件不会被安装；亦即只有已安装至你 Linux 系统内的软件会被『升级』！				

				
http://vbird.dic.ksu.edu.tw/linux_basic/0520rpm_and_srpm.php
文件格式  档名格式     直接安装与否  内含程序类型    可否修改参数并编译
RPM       xxx.rpm      可            已编译          不可
SRPM      xxx.src.rpm  不可          未编译之原始码  可

什么是 i386, i586, i686, noarch, x86_64
从上面的说明，现在我们知道 RPM 与 SRPM 的格式分别为：

xxxxxxxxx.rpm   <==RPM 的格式，已经经过编译且包装完成的 rpm 文件；
xxxxx.src.rpm   <==SRPM的格式，包含未编译的原始码资讯。
那么我们怎么知道这个软件的版本、适用的平台、编译释出的次数呢？只要透过档名就可以知道了！例如 rp-pppoe-3.1-5.i386.rpm 这的文件的意义为：

rp-pppoe -        3.1    -     5        .i386        .rpm
软件名称   软件的版本资讯 释出的次数 适合的硬件平台 扩展名
除了后面适合的硬件平台与扩展名外，主要是以『-』来隔开各个部分，这样子可以很清楚的发现该软件的名称、 版本资讯、打包次数与操作的硬件平台！好了，来谈一谈每个不同的地方吧：

软件名称：
当然就是每一个软件的名称了！上面的范例就是 rp-pppoe 。

版本资讯：
每一次升级版本就需要有一个版本的资讯，否则如何知道这一版是新是旧？这里通常又分为主版本跟次版本。以上面为例，主版本为 3 ，在主版本的架构下更动部分原始码内容，而释出一个新的版本，就是次版本啦！以上面为例，就是 1 罗！

释出版本次数：
通常就是编译的次数啦！那么为何需要重复的编译呢？这是由於同一版的软件中，可能由於有某些 bug 或者是安全上的顾虑，所以必须要进行小幅度的 patch 或重设一些编译参数。 配置完成之后重新编译并打包成 RPM 文件！因此就有不同的打包数出现了！

操作硬件平台：
这是个很好玩的地方，由於 RPM 可以适用在不同的操作平台上，但是不同的平台配置的参数还是有所差异性！ 并且，我们可以针对比较高阶的 CPU 来进行最佳化参数的配置，这样才能够使用高阶 CPU 所带来的硬件加速功能。 所以就有所谓的 i386, i586, i686, x86_64 与 noarch 等的文件名称出现了！

平台名称	适合平台说明
i386	几乎适用於所有的 x86 平台，不论是旧的 pentum 或者是新的 Intel Core 2 与 K8 系列的 CPU 等等，都可以正常的工作！那个 i 指的是 Intel 兼容的 CPU 的意思，至於 386 不用说，就是 CPU 的等级啦！
i586	就是针对 586 等级的计算机进行最佳化编译。那是哪些 CPU 呢？包括 pentum 第一代 MMX CPU， AMD 的 K5, K6 系列 CPU (socket 7 插脚) 等等的 CPU 都算是这个等级；
i686	在 pentun II 以后的 Intel 系列 CPU ，及 K7 以后等级的 CPU 都属於这个 686 等级！ 由於目前市面上几乎仅剩 P-II 以后等级的硬件平台，因此很多 distributions 都直接释出这种等级的 RPM 文件。
x86_64	针对 64 位的 CPU 进行最佳化编译配置，包括 Intel 的 Core 2 以上等级 CPU ，以及 AMD 的 Athlon64 以后等级的 CPU ，都属於这一类型的硬件平台。
noarch	就是没有任何硬件等级上的限制。一般来说，这种类型的 RPM 文件，里面应该没有 binary program 存在， 较常出现的就是属於 shell script 方面的软件。




http://www.cnblogs.com/xiaochaohuashengmi/archive/2011/10/08/2203153.html

Linux rpm 命令参数使用详解［介绍和应用］

RPM是RedHat Package Manager（RedHat软件包管理工具）类似Windows里面的“添加/删除程序”

rpm 执行安装包
二进制包（Binary）以及源代码包（Source）两种。二进制包可以直接安装在计算机中，而源代码包将会由RPM自动编译、安装。源代码包经常以src.rpm作为后缀名。

常用命令组合：

 

－ivh：安装显示安装进度--install--verbose--hash
－Uvh：升级软件包--Update；
－qpl：列出RPM软件包内的文件信息[Query Package list]；
－qpi：列出RPM软件包的描述信息[Query Package install package(s)]；
－qf：查找指定文件属于哪个RPM软件包[Query File]；
－Va：校验所有的RPM软件包，查找丢失的文件[View Lost]；
－e：删除包
 

 

复制代码
rpm -q samba //查询程序是否安装

rpm -ivh  /media/cdrom/RedHat/RPMS/samba-3.0.10-1.4E.i386.rpm //按路径安装并显示进度
rpm -ivh --relocate /=/opt/gaim gaim-1.3.0-1.fc4.i386.rpm    //指定安装目录

rpm -ivh --test gaim-1.3.0-1.fc4.i386.rpm　　　 //用来检查依赖关系；并不是真正的安装；
rpm -Uvh --oldpackage gaim-1.3.0-1.fc4.i386.rpm //新版本降级为旧版本

rpm -qa | grep httpd　　　　　 ＃[搜索指定rpm包是否安装]--all搜索*httpd*
rpm -ql httpd　　　　　　　　　＃[搜索rpm包]--list所有文件安装目录

rpm -qpi Linux-1.4-6.i368.rpm　＃[查看rpm包]--query--package--install package信息
rpm -qpf Linux-1.4-6.i368.rpm　＃[查看rpm包]--file
rpm -qpR file.rpm　　　　　　　＃[查看包]依赖关系
rpm2cpio file.rpm |cpio -div    ＃[抽出文件]

rpm -ivh file.rpm 　＃[安装新的rpm]--install--verbose--hash
rpm -ivh

rpm -Uvh file.rpm    ＃[升级一个rpm]--upgrade
rpm -e file.rpm      ＃[删除一个rpm包]--erase
复制代码
常用参数：

Install/Upgrade/Erase options:

复制代码
-i, --install                     install package(s)
-v, --verbose                     provide more detailed output
-h, --hash                        print hash marks as package installs (good with -v)
-e, --erase                       erase (uninstall) package
-U, --upgrade=<packagefile>+      upgrade package(s)
－-replacepkge                    无论软件包是否已被安装，都强行安装软件包
--test                            安装测试，并不实际安装
--nodeps                          忽略软件包的依赖关系强行安装
--force                           忽略软件包及文件的冲突

Query options (with -q or --query):
-a, --all                         query/verify all packages
-p, --package                     query/verify a package file
-l, --list                        list files in package
-d, --docfiles                    list all documentation files
-f, --file                        query/verify package(s) owning file
复制代码
RPM源代码包装安装

.src.rpm结尾的文件，这些文件是由软件的源代码包装而成的，用户要安装这类RPM软件包，必须使用命令：

 

rpm　--recompile　vim-4.6-4.src.rpm   ＃这个命令会把源代码解包并编译、安装它，如果用户使用命令：

rpm　--rebuild　vim-4.6-4.src.rpm　　＃在安装完成后，还会把编译生成的可执行文件重新包装成i386.rpm的RPM软件包。
 

偶不喜欢写比较复杂的东东，麻烦的话`不过做为参考`偶还素转了一位哒人的`写的真很全面`


作者：北南南北
来自：LinuxSir.Org
提要：RPM 是 Red Hat Package Manager 的缩写，原意是Red Hat 软件包管理；本文介绍RPM，并结合实例来解说RPM手工安装、查询等应用；


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
正文：
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

RPM 是 Red Hat Package Manager 的缩写，本意是Red Hat 软件包管理，顾名思义是Red Hat 贡献出来的软件包管理；在Fedora 、Redhat、Mandriva、SuSE、YellowDog等主流发行版本，以及在这些版本基础上二次开发出来的发行版采用；

RPM包里面都包含什么？里面包含可执行的二进制程序，这个程序和Windows的软件包中的.exe文件类似是可执行的；RPM包中还包括程序运行时所需要的文件，这也和Windows的软件包类似，Windows的程序的运行，除了.exe文件以外，也有其它的文件；

一个RPM 包中的应用程序，有时除了自身所带的附加文件保证其正常以外，还需要其它特定版本文件，这就是软件包的依赖关系；依赖关系并不是Linux特有的， Windows操作系统中也是同样存在的；比如我们在Windows系统中运行3D游戏，在安装的时候，他可能会提示，要安装Direct 9 ；Linux和Windows原理是差不多的；

软件安装流程图：

 


本文使用范围：

1、本文是对RPM管理的软件的说明，对通过file.tar.gz 或file.tar.bz2源码包用 make ;make install 安装的软件无效；
2、安装软件时，最好用各自发行版所提供的系统软件包管理工具，对于Fedora/Redhat 您可以参考如下文章；

1）Fedora 系统管理软件包工具 system-config-packages，方便的添加和移除系统安装盘提供的软件包，详情请看 《Fedora 软件包管理器system-config-packages》

2）Redhat 系统管理软件包工具,新一点的系统应该是 redhat-config-packages ，用法和 《Fedora 软件包管理器system-config-packages》 一样；

3）apt + synaptic 软件包在线安装、移除、升级工具； 用法：《用apt+synaptic 在线安装或升级Fedora core 4.0 软件包》
4）yum 软件包在线安装、升级、移除工具；用法：《Fedora/Redhat 在线安装更新软件包，yum 篇》

5）所有的yum和apt 教程 《apt and yum》

目前 apt和yum 已经极为成熟了，建议我们安装软件时，采用 apt或者yum ；如果安装系统盘提供的软件包，可以用 system-config-packages 或redhat-config-packages ；


一、RPM包管理的用途；

1、可以安装、删除、升级和管理软件；当然也支持在线安装和升级软件；
2、通过RPM包管理能知道软件包包含哪些文件，也能知道系统中的某个文件属于哪个软件包；
3、可以在查询系统中的软件包是否安装以及其版本；
4、作为开发者可以把自己的程序打包为RPM 包发布；
5、软件包签名GPG和MD5的导入、验证和签名发布
6、依赖性的检查，查看是否有软件包由于不兼容而扰乱了系统；


二、RPM 的使用权限；

RPM软件的安装、删除、更新只有root权限才能使用；对于查询功能任何用户都可以操作；如果普通用户拥有安装目录的权限，也可以进行安装；


三、rpm 的一点简单用法；

我们除了软件包管理器以外，还能通过rpm 命令来安装；是不是所有的软件包都能通过rpm 命令来安装呢？不是的，文件以.rpm 后缀结尾的才行；有时我们在一些网站上找到file.rpm ，都要用 rpm 来安装；

一）初始化rpm 数据库；

通过rpm 命令查询一个rpm 包是否安装了，也是要通过rpm 数据库来完成的；所以我们要经常用下面的两个命令来初始化rpm 数据库；

[root@localhost beinan]# rpm --initdb
[root@localhost beinan]# rpm --rebuilddb 注：这个要花好长时间；
注：这两个参数是极为有用，有时rpm 系统出了问题，不能安装和查询，大多是这里出了问题；

二）RPM软件包管理的查询功能：

命令格式

rpm {-q|--query} [select-options] [query-options]
RPM的查询功能是极为强大，是极为重要的功能之一；举几个常用的例子，更为详细的具体的，请参考#man rpm

1、对系统中已安装软件的查询；

1）查询系统已安装的软件；

 

语法：rpm -q 软件名
举例：

 

[root@localhost beinan]# rpm -q gaim
gaim-1.3.0-1.fc4
-q就是 --query ，中文意思是“问”，此命令表示的是，是不是系统安装了gaim ；如果已安装会有信息输出；如果没有安装，会输出gaim 没有安装的信息；

查看系统中所有已经安装的包，要加 -a 参数 ；

[root@localhost RPMS]# rpm -qa

如果分页查看，再加一个管道 |和more命令；
[root@localhost RPMS]# rpm -qa |more
在所有已经安装的软件包中查找某个软件，比如说 gaim ；可以用 grep 抽取出来；

 

[root@localhost RPMS]# rpm -qa |grep gaim
上面这条的功能和 rpm -q gaim 输出的结果是一样的；

2）查询一个已经安装的文件属于哪个软件包；

 

语法 rpm -qf 文件名

注：文件名所在的绝对路径要指出
 

举例：

[root@localhost RPMS]# rpm -qf /usr/lib/libacl.la
libacl-devel-2.2.23-8
3）查询已安装软件包都安装到何处；

 

语法：rpm -ql 软件名 或 rpm rpmquery -ql 软件名
举例：

 

[root@localhost RPMS]# rpm -ql lynx
[root@localhost RPMS]# rpmquery -ql lynx
4）查询一个已安装软件包的信息

 

语法格式： rpm -qi 软件名
举例：

[root@localhost RPMS]# rpm -qi lynx
5）查看一下已安装软件的配置文件；

 

语法格式：rpm -qc 软件名
举例：

[root@localhost RPMS]# rpm -qc lynx
6）查看一个已经安装软件的文档安装位置：

 

语法格式： rpm -qd 软件名
举例：

 

[root@localhost RPMS]# rpm -qd lynx
7）查看一下已安装软件所依赖的软件包及文件；

 

语法格式： rpm -qR 软件名
举例：

[root@localhost beinan]# rpm -qR rpm-python
查询已安装软件的总结：对于一个软件包已经安装，我们可以把一系列的参数组合起来用；比如 rpm -qil ；比如：

[root@localhost RPMS]# rpm -qil lynx

2、对于未安装的软件包的查看：

查看的前提是您有一个.rpm 的文件，也就是说对既有软件file.rpm的查看等；

1）查看一个软件包的用途、版本等信息；

 

语法： rpm -qpi file.rpm
举例：

 

[root@localhost RPMS]# rpm -qpi lynx-2.8.5-23.i386.rpm
2）查看一件软件包所包含的文件；

 

语法： rpm -qpl file.rpm
举例：

[root@localhost RPMS]# rpm -qpl lynx-2.8.5-23.i386.rpm
3）查看软件包的文档所在的位置；

 

语法： rpm -qpd file.rpm
举例：

[root@localhost RPMS]# rpm -qpd lynx-2.8.5-23.i386.rpm
5）查看一个软件包的配置文件；

 

语法： rpm -qpc file.rpm
举例：

[root@localhost RPMS]# rpm -qpc lynx-2.8.5-23.i386.rpm
4）查看一个软件包的依赖关系

 

语法： rpm -qpR file.rpm
举例：

[root@localhost archives]# rpm -qpR yumex_0.42-3.0.fc4_noarch.rpm
/bin/bash
/usr/bin/python
config(yumex) = 0.42-3.0.fc4
pygtk2
pygtk2-libglade
rpmlib(CompressedFileNames) <= 3.0.4-1
rpmlib(PayloadFilesHavePrefix) <= 4.0-1
usermode
yum >= 2.3.2

三）软件包的安装、升级、删除等；


1、安装和升级一个rpm 包；

 

[root@localhost beinan]#rpm -vih file.rpm 注：这个是用来安装一个新的rpm 包；
[root@localhost beinan]#rpm -Uvh file.rpm 注：这是用来升级一个rpm 包；
如果有依赖关系的，请解决依赖关系，其实软件包管理器能很好的解决依赖关系，请看前面的软件包管理器的介绍；如果您在软件包管理器中也找不到依赖关系的包；那只能通过编译他所依赖的包来解决依赖关系，或者强制安装；

语法结构：

 

[root@localhost beinan]# rpm -ivh file.rpm --nodeps --force
[root@localhost beinan]# rpm -Uvh file.rpm --nodeps --force
更多的参数，请查看 man rpm

举例应用：

[root@localhost RPMS]# rpm -ivh lynx-2.8.5-23.i386.rpm
Preparing... ########################################### [100%]
      1:lynx ########################################### [100%]
[root@localhost RPMS]# rpm -ivh --replacepkgs lynx-2.8.5-23.i386.rpm
Preparing... ########################################### [100%]
      1:lynx ########################################### [100%]
注： --replacepkgs 参数是以已安装的软件再安装一次；有时没有太大的必要；

测试安装参数 --test ，用来检查依赖关系；并不是真正的安装；

 

[root@localhost RPMS]# rpm -ivh --test gaim-1.3.0-1.fc4.i386.rpm
Preparing... ########################################### [100%]
由新版本降级为旧版本，要加 --oldpackage 参数；

 

[root@localhost RPMS]# rpm -qa gaim
gaim-1.5.0-1.fc4
[root@localhost RPMS]# rpm -Uvh --oldpackage gaim-1.3.0-1.fc4.i386.rpm
Preparing... ########################################### [100%]
      1:gaim ########################################### [100%]
[root@localhost RPMS]# rpm -qa gaim
gaim-1.3.0-1.fc4
为软件包指定安装目录：要加 -relocate 参数；下面的举例是把gaim-1.3.0-1.fc4.i386.rpm指定安装在 /opt/gaim 目录中；

 

[root@localhost RPMS]# rpm -ivh --relocate /=/opt/gaim gaim-1.3.0-1.fc4.i386.rpm
Preparing... ########################################### [100%]
      1:gaim ########################################### [100%]
[root@localhost RPMS]# ls /opt/
gaim
为软件包指定安装目录：要加 -relocate 参数；下面的举例是把lynx-2.8.5-23.i386.rpm 指定安装在 /opt/lynx 目录中；


[root@localhost RPMS]# rpm -ivh --relocate /=/opt/lynx --badreloc lynx-2.8.5-23.i386.rpm
Preparing... ########################################### [100%]
1:lynx ########################################### [100%]

我们安装在指定目录中的程序如何调用呢？一般执行程序，都放在安装目录的bin或者sbin目录中；看下面的例子；如果有错误输出，就做相应的链接，用 ln -s ；

 

[root@localhost RPMS]# /opt/lynx/usr/bin/lynx
Configuration file /etc/lynx.cfg is not available.
[root@localhost RPMS]# ln -s /opt/lynx/etc/lynx.cfg /etc/lynx.cfg
[root@localhost RPMS]# /opt/lynx/usr/bin/lynx www.linuxsir.org

2、删除一个rpm 包；

首先您要学会查询rpm 包 ；请看前面的说明；

[root@localhost beinan]#rpm -e 软件包名

举例：我想移除lynx 包，完整的操作应该是：

[root@localhost RPMS]# rpm -e lynx
如果有依赖关系，您也可以用--nodeps 忽略依赖的检查来删除。但尽可能不要这么做，最好用软件包管理器 systerm-config-packages 来删除或者添加软件；

 

[root@localhost beinan]# rpm -e lynx --nodeps

四、导入签名：

[root@localhost RPMS]# rpm --import 签名文件

举例：

 

[root@localhost fc40]# rpm --import RPM-GPG-KEY
[root@localhost fc40]# rpm --import RPM-GPG-KEY-fedora
关于RPM的签名功能，详情请参见 man rpm

五、RPM管理包管理器支持网络安装和查询；

比如我们想通过 Fedora Core 4.0 的一个镜像查询、安装软件包；

地址：
http://mirrors.kernel.org/fedora/core/4/i386/os/Fedora/RPMS/

举例：

命令格式：

 

rpm 参数 rpm包文件的http或者ftp的地址
# rpm -qpi http://mirrors.kernel.org/fedora/core/4/i386/os/ Fedora/RPMS/gaim-1.3.0-1.fc4.i386.rpm
# rpm -ivh http://mirrors.kernel.org/fedora/core/4/i386/os/ Fedora/RPMS/gaim-1.3.0-1.fc4.i386.rpm
举一反三吧；


六、对已安装软件包查询的一点补充；


[root@localhost RPMS]# updatedb
[root@localhost RPMS]# locate 软件名或文件名
通过updatedb，我们可以用 locate 来查询一些软件安装到哪里了；系统初次安装时要执行updatedb ，每隔一段时间也要执行一次；以保持已安装软件库最新；updatedb 是slocate软件包所有；如果您没有这个命令，就得安装slocate ；

举例：

 

[root@localhost RPMS]# locate gaim


七、从rpm软件包抽取文件；

命令格式： rpm2cpio file.rpm |cpio -div

举例：
[root@localhost RPMS]# rpm2cpio gaim-1.3.0-1.fc4.i386.rpm |cpio -div
抽取出来的文件就在当用操作目录中的 usr 和etc中；

其实这样抽到文件不如指定安装目录来安装软件来的方便；也一样可以抽出文件；

为软件包指定安装目录：要加 -relocate 参数；下面的举例是把gaim-1.3.0-1.fc4.i386.rpm指定安装在 /opt/gaim 目录中；

 

[root@localhost RPMS]# rpm -ivh --relocate /=/opt/gaim gaim-1.3.0-1.fc4.i386.rpm
Preparing... ########################################### [100%]
      1:gaim ########################################### [100%]
[root@localhost RPMS]# ls /opt/
gaim
这样也能一目了然；gaim的所有文件都是安装在 /opt/gaim 中，我们只是把gaim 目录备份一下，然后卸掉gaim；这样其实也算提取文件的一点用法；


八、RPM的配置文件；

RPM包管理，的配置文件是 rpmrc ，我们可以在自己的系统中找到；比如Fedora Core 4.0中的rpmrc 文件位于；

[root@localhost RPMS]# locate rpmrc
/usr/lib/rpm/rpmrc
/usr/lib/rpm/redhat/rpmrc
我们可以通过 rpm --showrc 查看；具体的还得我们自己来学习。呵。。。不要问我，我也不懂；只要您看了这篇文章，认为对您有用，您的水平就和我差不多；咱们水平是一样的，所以我不能帮助您了；请理解；

九、src.rpm的用法：

《file.src.rpm 使用方法的简介》


后记：Fedora/Redhat 入门教程中的软件包管理篇，我已经写了很多了；目前还缺少通过源码包安装软件我方法以及一篇总结性的文档；我想在最近两天补齐，这两篇我以前写过；重新整理一下贴出来就行了；

以我的水平来看，写Fedora 入门教程是极为费力气的，只能一点一点的完善和补充；我所写的教程是面对的是对Linux一无所知新手；教程中实例应用占大部份；我发现没有实例的情况下，新手不如看man ；能看man了，当然也不是什么新手；

经常在论坛上看一些弟兄的提问，虽然一问话解说过去也能应付；但想让大家更方便一点，不如写系统入门教程；虽然所花的时间要长一点；


 