----> Domain Name System (DNS)
The Domain Name System (DNS) is the system that provides name to address mapping  for 
the Internet. DNS has two conceptually independent aspects. The first is abstract: it 
specifies the name syntax and rules for delegating authority over names. The second -
is concrete: it specifies the implementation of a distributed computing system that -
efficiently maps names to addresses.

The Domain Name System uses a hierarchical naming scheme known as domain names. As in 
our earlier examples, a domain name consists of a sequence of subnames separated by a 
delimiter character, the dot. In our examples, we said that individual sections of t-
he name might represent sites or groups, but DNS simply calls each section a label. -
Thus, the domain name:
                 cs .purdue .edu
contains three labels: cs, purdue, and edu. Any suffix of a label in a domain name is
also called a domain. In the above example, the lowest-level domain is cs.purdue.edu,
(the domain name for the Computer Science department at Purdue University), the seco-
nd level domain is purdue.edu (the domain name for Purdue University), and the      -
top-level domain is edu (the domain name for educational institutions). As the examp-
le shows, domain names are written with the local label first and the top domain las-
t. As we will see, writing them in this order makes it possible to compress  messages 
that contain multiple domain names.

domain name comparisons are insensitive to case, so COM is equivalent to com.

----> top-level domin
Conceptually, the top-level names permit two different naming hierarchies: geographic 
and organizational. 

aero            Air transport industry
arpa            Infrastructure domain
asia            Regional domain for Asia
biz             Businesses
cat             Catalan language and cultural
com             Commercial organization
coop            Cooperative associations
edu             Educational institution (4-year)
gov             United States government
info            Information
int             International treaty organizations
jobs            Human resource management
mil             United States military
museum          Museums
name            Individuals
net             Major network support centers
org             Organizations other than those above
pro             Credentialed professionals
travel          Travel industry
xxx             Internet pornography
country code    Each country (geographic scheme)

----> Domain Name Resolution
A client must know how to contact at least one name server. To ensure that a domain -
name server can reach others, the domain system requires that each server know the a-
ddress of at least one root server. Domain name servers use a well-known protocol po-
rt for all communication, so clients know how to communicate with a name server  once 
they know the IP address of the machine in which the server executes. How does a cli-
ent learn the address of a name server? Many systems obtain the address of a domain -
server automatically as part of the bootstrap process. For example, bootstrap protoc-
ols such as IPv4’s DHCP and IPv6’s NDP or DHCPv6 can supply a name server address. Of 
course, other approaches are possible. For example, the address of a name server  can 
be bound into application programs at compile time. Alternatively, the address can be 
stored in a file on secondary storage. 

dns client
the client software forms a domain name query that contains the name to be  resolved, 
a declaration of the class of the name, the type of answer desired, and a code that -
specifies whether the name server should translate the name completely. The client s-
ends the query to a name server for resolution. A client always contacts a local dom-
ain name server first.

dns server
When a domain name server receives a query, it checks to see if the name lies in  the 
subdomain for which it is an authority. If so, it translates the name to an address -
according to its database, and appends an answer to the query before sending it  back 
to the client. If the name server cannot resolve the name completely, it checks to s-
ee what type of interaction the client specified. If the client requested complete t-
ranslation (recursive resolution, in domain name terminology), the server contacts  a 
domain name server that can resolve the name and returns the answer to the client. If 
the client requested non-recursive resolution (iterative resolution), the name server 
cannot supply an answer. It generates a reply that specifies the name server the cli-
ent should contact to resolve the name.

----> 不同类型的机器可能有相同的名字
A given name may map to more than one item in the domain system. The client specifies 
the type of object desired when resolving a name, and the server returns objects of -
that type. For example, a given name can be the name of a host computer that has an -
IPv4 address, a host computer that has an IPv6 address, a mail server, and so on. Wh-
en a client asks the domain system to resolve a name, it must specify the type of an-
swer desired.

---- 仅从名字不能区分出是一个域的名字还是一个主机的名字,也看不出域名的类型
One cannot distinguish the names of subdomains from the names of individual objects -
or the type of an object using only the domain name syntax. it is possible to have  a 
machine named gwen.purdue.edu,even though cs.purdue.edu names a subdomain.

----> 域名的层级管理
A machine named xinu in the Computer Science department at Purdue University has  the 
official domain name: xinu.cs.purdue.edu. The machine name was approved and register-
ed by the local network manager in the Computer Science department. The department m-
anager had previously obtained authority for the subdomain cs.purdue.edu from a univ-
ersity network authority, who had obtained permission to manage the subdomain       -
purdue.edu from the Internet authority. The Internet authority retains control of the 
edu domain, so new universities can only be added with its permission. Similarly, the 
university network manager at Purdue University retains authority for the  purdue.edu 
subdomain, so new third-level domains may only be added with the manager’s permission.

----> name server  name resolver
A name server is a server program that supplies name-to-address translation,  mapping 
from domain names to IP addresses. Often,server software executes on a dedicated pro-
cessor, and the machine itself is called the name server. The client software, called 
a name resolver, may contact one or more name servers when translating a name.

---->caching 
Internet name servers use caching to make resolution efficient.
When a client asks the server to resolve a name, the server first checks to see
if it has authority for the name according to the standard procedure. If not, the server
checks its cache to see if the name has been resolved recently. Servers report cached
information to clients, but mark it as a nonauthoritativebinding and give the domain
name of the server,S, from which they obtained the binding. The local server also
sends along additional information that tells the client the binding betweenSand an IP
address. 
Caching is important in hosts as well as in local name servers. Most resolver
software caches DNS entries in the host. Thus, if a user looks up the same name repeatedly, subsequent lookups can be resolved from the local cache without using the
network.

关于老化时间ttl
The key to DNS success arises because a server does not apply a single fixed
timeout to all entries. Instead, DNS allows the authority for an entry to configure its
timeout. That is, whenever an authority responds to a request, the authority includes a
Time To Live(TTL) value in the response that specifies how long the binding will
remain valid. Thus, authorities can reduce network overhead by specifying long
timeouts for entries that they expect to remain unchanged, while specifying short
timeouts for entries that they expect to change.

---->协议格式
|0                    16                    31|
+---------------------------------------------+
|    IDENTIFICATION    |      PARAMETER       |
+---------------------------------------------+
| NUMBER OF QUESTIONS  | NUMBER OF ANSWERS    |
+---------------------------------------------+
| NUMBER OF AUTHORITY  | NUMBER OF ADDITIONAL |
+---------------------------------------------+
|             QUESTION SECTION                |
|                    ...                      |
+---------------------------------------------+
|              ANSWER SECTION                 |
|                    ...                      |
+---------------------------------------------+
|             AUTHORITY SECTION               |
|                    ...                      |
+---------------------------------------------+
|   ADDITIONAL INFORMATION SECTION            |
|                    ...                      |
+---------------------------------------------+

IDENTIFICATION 
    set by the client and returned by the server. It lets the client match  responses 
	to requests. 
	

|0                                                                     16|
+------------------------------------------------------------------------+
| Q/R | OpCode(4 bits) | AA | TC | RD | RA | Z | AD | CD | RCODE(4 bits) |
+------------------------------------------------------------------------+ 	
PARAMETER
    field that specifies the operation requested and a response code.
	Bit of PARAMETER field | Meaning
                         0 | Operation:
                           | 0 Query
                           | 1 Response
	-----------------------------------------------------------------					   
                       1-4 | Query Type:
                           | 0 Standard
                           | 1 Inverse
                           | 2 Server status request
                           | 4 Notify
                           | 5 Update
	-----------------------------------------------------------------						   
                         5 | Set if answer authoritative
                         6 | Set if message truncated
                         7 | Set if recursion desired
                         8 | Set if recursion available
                         9 | Set if data is authenticated
                        10 | Set if checking is disabled
                        11 | Reserved
	-----------------------------------------------------------------							
                     12-15 | Response Type:
                           | 0 No error
                           | 1 Format error in query
                           | 2 Server failure
                           | 3 Name does not exist
                           | 5 Refused
                           | 6 Name exists when it should not
                           | 7 RR set exists
                           | 8 RR set that should exist does not
                           | 9 Server not authoritative for the zone
                           | 10 Name not contained in zone
	-----------------------------------------------------------------							   
    16-bit word includes a number of flags and other subfields. Beginning from the  -
	left-most bit, QR(Query:0/Response:1) is a 1-bit field: 0 means the message is  a 
	query; 1 means it is a response. The next is the OpCode, a 4-bit field. The norm-
	al value is 0 (a standard query) for requests and responses. Other values are:  -
	4 (notify), and 5 (update). Other values (1–3) are deprecated or never seen in o-
	perational use. Next is the AA(Authoritative Answer) bit field that indicates  an 
	"authoritative answer" (as opposed to a cached answer). TC(Truncated Answer) is -
	a 1-bit field that means "truncated." With UDP, this flag being set means that t-
	he total size of the reply exceeded 512 bytes, and only the first 512 bytes of t-
	he reply were returned. RD(Recursion Desired) is a bit field that means "recursi-
	on desired." It can be set in a query and is then returned in the response. It t-
	ells the server to perform a recursive query. If the bit is not set, and the req-
	uested name server does not have an authoritative answer, the requested name ser-
	ver returns a list of other name servers to contact for the answer. At this poin-
	t, the overall query may be continued by contacting the list of other name serve-
	rs. This is called an iterative query. RA(Recursion Available) is a bit field th-
	at means "recursion available." This bit is set in the response if the server su-
	pports recursion. Root servers generally do not support recursion, thereby forci-
	ng clients to perform iterative queries to complete name resolution. The  Z(Zero) 
	bit field must be 0 for now but is reserved for future use. The                 -
	AD(Authentic Data RFC4035) bit field is set to true if the contained  information 
	is authenticated, and the CD(Checking Disable RFC4035) bit is set to true if sec-
	urity checking is disabled. The Response Code (or RCODE) field is a 4-bit field -
	with the return code whose possible values are given in [DNSPARAM]. The common v-
	alues include 0 (no error) and 3 (name error or "nonexistent domain," written  as 
	NXDOMAIN). 

NUMBER OF XXX
    each give a count of entries in the corresponding sections that occur later in t-
	he message. For example, the field labeled NUMBER OF QUESTIONS gives the count of 
	entries that appear in the QUESTION SECTION of the message. For a query, the num-
	ber of questions is normally 1 and the other three counts are 0. For a reply, the 
	number of answers is at least 1. Questions have a name, type, and class. (Class -
	supports non-Internet records. The type identifies the type of object being look-
	ed up.) All of the other sections contain zero or more RRs(resource records). RRs 
	contain a name, type, and class information, but also the TTL value that controls 
	how long the data can be cached.
	
	
|0                    16                    31|
+---------------------------------------------+
|               QUERY DOMAIN NAME             |
+---------------------------------------------+
|    QUERY TYPE       |      QUERY CLASS      |
+---------------------------------------------+	
QUESTION SECTION
    The domain name is variable length. A client fills in the questions; a server re-
	turns the questions along with answers. No padding is used. The QUERY TYPE  field 
	encodes the type of the question (e.g., whether the question refers to a  machine 
	name or a mail address). The QUERY CLASS field allows domain names to be used for 
	arbitrary objects because official Internet names are only one possible class.
	
ANSWER SECTION, AUTHORITY SECTION, and ADDITIONAL INFORMATION SECTION	
    In a domain name server message, each of the ANSWER SECTION, AUTHORITY SECTION, -
	and ADDITIONAL INFORMATION SECTION fields consists of a set of resource records -
	that describe domain names and mappings. 

Each resource record describes one name. 
|0                    16                    31|
+---------------------------------------------+
|            RESOURCE DOMAIN NAME             |
+---------------------------------------------+
|    QUERY TYPE       |      QUERY CLASS      |
+---------------------------------------------+
|    QUERY TYPE       |      QUERY CLASS      |
+---------------------------------------------+			
The RESOURCE DOMAIN NAME field contains the domain name to which this
resource record refers. It may be an arbitrary length. The TYPE field specifies the type
of the data included in the resource record; the CLASS field specifies the data’s class.
The TIME TO LIVE field contains a 32-bit integer. The integer specifies the number of
seconds that information in the resource record can be cached. Clients use the TIME
TO LIVE value to set a timeout when they cache the resource record. The last two
fields contain the results of the binding, with the RESOURCE DATA LENGTH field
specifying the count of octets in the RESOURCE DATA field.	
